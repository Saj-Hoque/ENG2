openapi: 3.0.1
info:
  title: order-management
  version: "0.0"
paths:
  /customers:
    get:
      tags:
      - customers
      operationId: getCustomers
      responses:
        "200":
          description: getCustomers 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
    post:
      tags:
      - customers
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerCreateDTO"
        required: true
      responses:
        "200":
          description: createCustomer 200 response
  /customers/{id}:
    get:
      tags:
      - customers
      operationId: getCustomer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getCustomer 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
    put:
      tags:
      - customers
      operationId: updateCustomer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerCreateDTO"
        required: true
      responses:
        "200":
          description: updateCustomer 200 response
    delete:
      tags:
      - customers
      operationId: deleteCustomer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: deleteCustomer 200 response
  /customers/{id}/orders:
    get:
      tags:
      - customers
      operationId: getCustomerOrders
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getCustomerOrders 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
  /order_item:
    get:
      tags:
      - order_item
      operationId: getOrderItems
      responses:
        "200":
          description: getOrderItems 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderItem"
  /order_item/{id}:
    get:
      tags:
      - order_item
      operationId: getOrderItemById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getOrderItemById 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderItem"
  /order_item/{id}/order:
    get:
      tags:
      - order_item
      operationId: getOrderItemOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getOrderItemOrder 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
  /orders:
    get:
      tags:
      - orders
      operationId: getOrders
      responses:
        "200":
          description: getOrders 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
    post:
      tags:
      - orders
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreateDTO"
        required: true
      responses:
        "200":
          description: createOrder 200 response
  /orders/{id}:
    get:
      tags:
      - orders
      operationId: getOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getOrder 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
    put:
      tags:
      - orders
      operationId: updateOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderUpdateDTO"
        required: true
      responses:
        "200":
          description: updateOrder 200 response
    delete:
      tags:
      - orders
      operationId: deleteOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: deleteOrder 200 response
  /orders/{id}/customer:
    get:
      tags:
      - orders
      operationId: getOrderCustomer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getOrderCustomer 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
  /orders/{id}/orderItems:
    get:
      tags:
      - orders
      operationId: getOrderItems_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getOrderItems_1 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderItem"
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        email:
          type: string
        firstName:
          type: string
        familyName:
          type: string
    CustomerCreateDTO:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        familyName:
          type: string
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        dateCreated:
          type: string
          format: date
        address:
          type: string
        paid:
          type: boolean
        delivered:
          type: boolean
        totalAmount:
          type: number
          format: float
    OrderCreateDTO:
      type: object
      properties:
        customerId:
          type: integer
          format: int64
        address:
          type: string
        orderRequest:
          $ref: "#/components/schemas/OrderRequestDTO"
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        productId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        unitPrice:
          type: number
          format: float
    OrderRequestDTO:
      type: object
      properties:
        order:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/OrderRequestDTOProductOrder"
    OrderRequestDTOProductOrder:
      type: object
      properties:
        productId:
          type: integer
          format: int64
          nullable: true
        quantity:
          type: integer
          format: int32
          nullable: true
    OrderUpdateDTO:
      type: object
      properties:
        paid:
          type: boolean
        delivered:
          type: boolean
