/**
 */
package uk.ac.york.cs.eng2.offers.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import uk.ac.york.cs.eng2.offers.util.OffersAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class OffersItemProviderAdapterFactory extends OffersAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public OffersItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.Offers} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OffersItemProvider offersItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.Offers}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOffersAdapter() {
		if (offersItemProvider == null) {
			offersItemProvider = new OffersItemProvider(this);
		}

		return offersItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.Catalog} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CatalogItemProvider catalogItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.Catalog}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCatalogAdapter() {
		if (catalogItemProvider == null) {
			catalogItemProvider = new CatalogItemProvider(this);
		}

		return catalogItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.Product} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductItemProvider productItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.Product}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductAdapter() {
		if (productItemProvider == null) {
			productItemProvider = new ProductItemProvider(this);
		}

		return productItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.Category} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CategoryItemProvider categoryItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.Category}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCategoryAdapter() {
		if (categoryItemProvider == null) {
			categoryItemProvider = new CategoryItemProvider(this);
		}

		return categoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.Tag} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TagItemProvider tagItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.Tag}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTagAdapter() {
		if (tagItemProvider == null) {
			tagItemProvider = new TagItemProvider(this);
		}

		return tagItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.Rule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuleItemProvider ruleItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.Rule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuleAdapter() {
		if (ruleItemProvider == null) {
			ruleItemProvider = new RuleItemProvider(this);
		}

		return ruleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.ProductOrderQuantityCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductOrderQuantityConditionItemProvider productOrderQuantityConditionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.ProductOrderQuantityCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductOrderQuantityConditionAdapter() {
		if (productOrderQuantityConditionItemProvider == null) {
			productOrderQuantityConditionItemProvider = new ProductOrderQuantityConditionItemProvider(this);
		}

		return productOrderQuantityConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.ProductTagCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductTagConditionItemProvider productTagConditionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.ProductTagCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductTagConditionAdapter() {
		if (productTagConditionItemProvider == null) {
			productTagConditionItemProvider = new ProductTagConditionItemProvider(this);
		}

		return productTagConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.MinimumOrderAmountCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MinimumOrderAmountConditionItemProvider minimumOrderAmountConditionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.MinimumOrderAmountCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMinimumOrderAmountConditionAdapter() {
		if (minimumOrderAmountConditionItemProvider == null) {
			minimumOrderAmountConditionItemProvider = new MinimumOrderAmountConditionItemProvider(this);
		}

		return minimumOrderAmountConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.DateCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DateConditionItemProvider dateConditionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.DateCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDateConditionAdapter() {
		if (dateConditionItemProvider == null) {
			dateConditionItemProvider = new DateConditionItemProvider(this);
		}

		return dateConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.TagQuantity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TagQuantityItemProvider tagQuantityItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.TagQuantity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTagQuantityAdapter() {
		if (tagQuantityItemProvider == null) {
			tagQuantityItemProvider = new TagQuantityItemProvider(this);
		}

		return tagQuantityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.BundlePriceAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BundlePriceActionItemProvider bundlePriceActionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.BundlePriceAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBundlePriceActionAdapter() {
		if (bundlePriceActionItemProvider == null) {
			bundlePriceActionItemProvider = new BundlePriceActionItemProvider(this);
		}

		return bundlePriceActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.PercentageDiscountPerProductAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PercentageDiscountPerProductActionItemProvider percentageDiscountPerProductActionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.PercentageDiscountPerProductAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPercentageDiscountPerProductActionAdapter() {
		if (percentageDiscountPerProductActionItemProvider == null) {
			percentageDiscountPerProductActionItemProvider = new PercentageDiscountPerProductActionItemProvider(this);
		}

		return percentageDiscountPerProductActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.PercentageDiscountOnTaggedQuantityAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PercentageDiscountOnTaggedQuantityActionItemProvider percentageDiscountOnTaggedQuantityActionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.PercentageDiscountOnTaggedQuantityAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPercentageDiscountOnTaggedQuantityActionAdapter() {
		if (percentageDiscountOnTaggedQuantityActionItemProvider == null) {
			percentageDiscountOnTaggedQuantityActionItemProvider = new PercentageDiscountOnTaggedQuantityActionItemProvider(this);
		}

		return percentageDiscountOnTaggedQuantityActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.PercentageDiscountTotalAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PercentageDiscountTotalActionItemProvider percentageDiscountTotalActionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.PercentageDiscountTotalAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPercentageDiscountTotalActionAdapter() {
		if (percentageDiscountTotalActionItemProvider == null) {
			percentageDiscountTotalActionItemProvider = new PercentageDiscountTotalActionItemProvider(this);
		}

		return percentageDiscountTotalActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.FixedDiscountAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FixedDiscountActionItemProvider fixedDiscountActionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.FixedDiscountAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFixedDiscountActionAdapter() {
		if (fixedDiscountActionItemProvider == null) {
			fixedDiscountActionItemProvider = new FixedDiscountActionItemProvider(this);
		}

		return fixedDiscountActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.Trigger} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TriggerItemProvider triggerItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.Trigger}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTriggerAdapter() {
		if (triggerItemProvider == null) {
			triggerItemProvider = new TriggerItemProvider(this);
		}

		return triggerItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (offersItemProvider != null) offersItemProvider.dispose();
		if (catalogItemProvider != null) catalogItemProvider.dispose();
		if (productItemProvider != null) productItemProvider.dispose();
		if (categoryItemProvider != null) categoryItemProvider.dispose();
		if (tagItemProvider != null) tagItemProvider.dispose();
		if (ruleItemProvider != null) ruleItemProvider.dispose();
		if (productOrderQuantityConditionItemProvider != null) productOrderQuantityConditionItemProvider.dispose();
		if (productTagConditionItemProvider != null) productTagConditionItemProvider.dispose();
		if (minimumOrderAmountConditionItemProvider != null) minimumOrderAmountConditionItemProvider.dispose();
		if (dateConditionItemProvider != null) dateConditionItemProvider.dispose();
		if (tagQuantityItemProvider != null) tagQuantityItemProvider.dispose();
		if (bundlePriceActionItemProvider != null) bundlePriceActionItemProvider.dispose();
		if (percentageDiscountPerProductActionItemProvider != null) percentageDiscountPerProductActionItemProvider.dispose();
		if (percentageDiscountOnTaggedQuantityActionItemProvider != null) percentageDiscountOnTaggedQuantityActionItemProvider.dispose();
		if (percentageDiscountTotalActionItemProvider != null) percentageDiscountTotalActionItemProvider.dispose();
		if (fixedDiscountActionItemProvider != null) fixedDiscountActionItemProvider.dispose();
		if (triggerItemProvider != null) triggerItemProvider.dispose();
	}

}
